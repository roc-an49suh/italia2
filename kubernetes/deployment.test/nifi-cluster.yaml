apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: tba-nifi
  labels:
    app: tba-nifi
spec:
  serviceName: tba-nifi
  replicas: 1
  selector:
    matchLabels:
      app: tba-nifi
  template:
    metadata:
      labels:
        app: tba-nifi
        nifi-cluster: "true"
    spec:
      hostAliases:
      - ip: "192.168.30.12"
        hostnames:
        - "master.novalocal"
        - "master"
      - ip: "192.168.30.56"
        hostnames:
        - "cloudera-master-staging-2.novalocal"
        - "master-staging-2"
      - ip: "192.168.30.57"
        hostnames:
        - "cloudera-master-staging-3.novalocal"
        - "master-staging-3"
      - ip: "192.168.30.24"
        hostnames:
        - "cloudera-slave-10.novalocal"
        - "slave10"
      - ip: "192.168.30.13"
        hostnames:
        - "slave1.novalocal"
        - "slave1"
      - ip: "192.168.30.18"
        hostnames:
        - "edge1.novalocal"
        - "edge1"
      - ip: "192.168.30.14"
        hostnames:
        - "slave2.novalocal"
        - "slave2"
      - ip: "192.168.30.19"
        hostnames:
        - "edge2.novalocal"
        - "edge2"
      - ip: "192.168.20.53"
        hostnames:
        - "idm.teamdigitale.test"
        - "idm"
      - ip: "192.168.20.5"
        hostnames:
        - "nifi-staging.novalocal"
        - "nifi"
      - ip: "192.168.20.20"
        hostnames:
        - "elk-master-1.teamdigitale.test"
        - "elk-master-1"
      - ip: "192.168.20.30"
        hostnames:
        - "sftp.teamdigitale.test"
      hostNetwork: false                      # NOTE: Do not change because it is used the services
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nifi-cluster
                  operator: In
                  values:
                  - "true"
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        nifi-cluster: "true"
      imagePullSecrets:
        - name: regsecret
      containers:
      - name: tba-nifi
        image: nexus.teamdigitale.test/tba-nifi.1.7.0.fix:9.3.1
        env:
        - name: NIFI_ADDITIONAL_SEARCH_DOMAINS
          value: "tba-nifi.default.svc.cluster.local teamdigitale.test"
          # NOTE: must match the StatefulSet name.
        ports:
        - name: nifi-http
          containerPort: 8080
        - name: nifi-input
          containerPort: 9998
        - name: nifi-cluster
          containerPort: 9999
        - name: listener
          containerPort: 8033
        resources:
          limits:
            memory: 16G
        volumeMounts:
        - name: private
          mountPath: /usr/nifi/data
          subPath: tba/evergreen2/nifi/data
          readOnly: false
        - name: private
          mountPath: /usr/nifi/logs
          subPath: tba/evergreen2/nifi/log
          readOnly: false
        - name: private
          mountPath: /tmp/kylo-nifi/failed-flows
          subPath: tba/evergreen2/nifi/failed-flows
          readOnly: false
        - name: glusterfsvol
          mountPath: /usr/nifi/extentions
          subPath: tba/evergreen2/nifi/extentions
          readOnly: true     # NOTE: was false
        - name: sparkhome
          mountPath: /opt/cloudera/parcels/
          readOnly: true
        - name: sparkconf
          mountPath: /etc/spark2/
          readOnly: true
        - name: spark1conf
          mountPath: /etc/spark/
          readOnly: true
        - name: alternatives
          mountPath: /etc/alternatives/
          readOnly: true
        - name: glusterfsvol
          mountPath: /usr/nifi/daf.keytab
          subPath: tba/security/daf.keytab
          readOnly: true
        - name: glusterfsvol
          mountPath: /etc/security/
          subPath: tba/security/
          readOnly: true
        - name: nifi-config
          mountPath: /usr/nifi/conf.temp
        - name: nifi-kylo
          mountPath: /usr/nifi/ext-config
        - name: hosts
          mountPath: /etc/extra_hosts
          readOnly: true
        - name: krb5conf
          mountPath: /etc/krb5.conf
          readOnly: true
        - name: hadoop
          mountPath: /etc/hadoop
          readOnly: true
        - name: hive
          mountPath: /etc/hive
          readOnly: true
        - name: kafka
          mountPath: /etc/kafka/conf
          readOnly: true
        - name: hbase
          mountPath: /etc/hbase
          readOnly: true
        - name: glusterfsvol
          mountPath: /usr/nifi/scripts
          subPath: nifi/scripts/edge1
          readOnly: true
        - name: glusterfsvol
          mountPath: /var/dropzone
          subPath: nifi/shared/dropzone
          readOnly: false
        - name: glusterfsvol
          mountPath: /home
          subPath: nifi/shared/dropzone
          readOnly: false
        - name: glusterfsvol
          mountPath: /var/rdf
          subPath: ontopia/virtuoso/data1
          readOnly: false
      restartPolicy: Always
      volumes:
      - name: glusterfsvol
        persistentVolumeClaim:
          claimName: gluster-claim
      - name: nifi-config
        configMap:
          name: nifi-cluster
      - name: nifi-kylo
        configMap:
          name: nifi-kylo
      - name: hosts
        hostPath:
          path: /etc/hosts
      - name: krb5conf
        hostPath:
          path: /etc/krb5.conf
      - name: hadoop
        hostPath:
          path: /etc/hadoop
      - name: sparkhome
        hostPath:
          path: /opt/cloudera/parcels/
      - name: alternatives
        hostPath:
          path: /etc/alternatives/
      - name: kafka
        hostPath:
          path: /etc/alternatives/kafka-conf
      - name: sparkconf
        hostPath:
          path: /etc/spark2/
      - name: spark1conf
        hostPath:
          path: /etc/spark/
      - name: hbase
        hostPath:
          path: /etc/hbase/
      - name: hive
        hostPath:
          path: /etc/hive/
  volumeClaimTemplates:
  - metadata:
      name: private
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 24Gi
